1. _in  : this should print "invalid token"
            instead of 
        "Expected token "in" but found: (<OPERATOR>, '_') at line 4 and column 2 in the source code." 


2.  let Sum(A) = Psum (A,Order A )
        where rec Psum (T,N) = N eq 0 -> 0
        | Psum(T,N-1)+T N
        Print ( Sum (1,2,3,4,5) )

        This should print 
            Expected token "in" but found: Print at line 4 and column 6 in the source code.
         instead of
        " Expected token: in but found: None "


3.  Empty code should not give an error


--handling invalid identifiers
4.  let Sum(_A) = Psum (A,Order A )
        where rec Psum (T,N) = N eq 0 -> 0
        | Psum(T,N-1)+T N
    Print ( Sum (1,2,3,4,5) )

    This should print not print "Expected token "<ID:_>" but found: (<OPERATOR>, '_') at line 1 and column 10 in the source code"
        instead 
    it should be something like "invalid identier"



5. let Sum(A) = Psum (A,Order A )
where rec Psum (T,N) = N eq 0 -> 0
 | Psum(T,N-1)+T N
3 Print ( Sum (1,2,3,4,5) )


Expected token: in but found: None

this should not be the output





