let mod(num, div) =
num < div -> num
    | (num - (num / div) * div)
in
let isPalindrome(N) = (
   reverseNumber(N, 0) eq N where 
rec reverseNumber(num,rev) =
num eq 0 ->
rev |
reverseNumber( num/10, rev * 10 + mod(num, 10) )
)
in
let rec palNumbers(start, stop) =
	start < stop -> 
	  isPalindrome(stop) -> (palNumbers(start, stop-1) aug stop) 
| palNumbers(start,stop-1)
  | isPalindrome(stop) -> (nil aug stop) | nil
 
in Print(palNumbers(1, 1000))
