Search.setIndex({"docnames": ["helpers", "index", "modules", "myrpal", "rpal_interpreter", "tests"], "filenames": ["helpers.rst", "index.rst", "modules.rst", "myrpal.rst", "rpal_interpreter.rst", "tests.rst"], "titles": ["helpers module", "Welcome to RPAL Interpreter\u2019s documentation!", "src", "myrpal module", "rpal_interpreter package", "tests package"], "terms": {"init_arg": [0, 2], "arg": [0, 4], "tupl": [0, 4], "str": [0, 4], "read_fil": [0, 2], "file": [0, 3, 5], "read": [0, 2, 3, 4], "return": [0, 3, 4], "its": [0, 4], "content": [0, 2], "index": [1, 4], "modul": [1, 2], "search": 1, "page": 1, "helper": [2, 5], "myrpal": 2, "main": [2, 3], "rpal_interpret": 2, "packag": 2, "submodul": 2, "ast_standard": 2, "aststandard": [2, 4], "non_standard": [2, 4], "check_to_standard": [2, 4], "standard": [2, 4], "cse_compon": 2, "control": [2, 4], "insertcontrolstruct": [2, 4], "insertenvmark": [2, 4], "peekrightmost": [2, 4], "removerightmost": [2, 4], "controlstruct": [2, 4], "addsymbol": [2, 4], "getarrai": [2, 4], "getindex": [2, 4], "controlstructur": [2, 4], "get": [2, 4], "environ": [2, 4], "insertenvdata": [2, 4], "lookupenv": [2, 4], "stack": [2, 4], "popstack": [2, 4], "pushstack": [2, 4], "removeenviron": [2, 4], "cse_machin": 2, "csemachin": [2, 4], "applylambda": [2, 4], "binop": [2, 4], "condit": [2, 4], "evalu": [2, 4], "exitenv": [2, 4], "stacklambda": [2, 4], "stackanam": [2, 4], "tupleform": [2, 4], "unop": [2, 4], "lexer": 2, "lookahead": [2, 4], "nexttoken": [2, 4], "reset": [2, 4], "token": 2, "node": 2, "AND": [2, 4], "and_op": [2, 4], "arrow": [2, 4], "assign": [2, 4], "AT": [2, 4], "aug": [2, 4], "bop": [2, 4], "comma": [2, 4], "divid": [2, 4], "dummi": [2, 4], "eq": [2, 4], "fals": [2, 4], "fcn_form": [2, 4], "gamma": [2, 4], "ge": [2, 4], "gr": [2, 4], "lambda": [2, 4], "le": [2, 4], "let": [2, 4], "l": [2, 4], "minu": [2, 4], "multipli": [2, 4], "ne": [2, 4], "neg": [2, 4], "nil": [2, 4], "NOT": [2, 4], "OR": [2, 4], "paren": [2, 4], "plu": [2, 4], "power": [2, 4], "rec": [2, 4], "tau": [2, 4], "true": [2, 4], "uop": [2, 4], "where": [2, 4], "within": [2, 4], "ystar": [2, 4], "parser": [2, 3, 5], "buildtre": [2, 4], "getast": [2, 4], "pars": [2, 4], "parserstack": [2, 4], "pop": [2, 4], "push": [2, 4], "top": [2, 4], "rpal_pars": 2, "rpalpars": [2, 4], "proc_a": [2, 4], "proc_af": [2, 4], "proc_ap": [2, 4], "proc_at": [2, 4], "proc_b": [2, 4], "proc_bp": [2, 4], "proc_bt": [2, 4], "proc_d": [2, 4], "proc_da": [2, 4], "proc_db": [2, 4], "proc_dr": [2, 4], "proc_": [2, 4], "proc_ew": [2, 4], "proc_r": [2, 4], "proc_rn": [2, 4], "proc_t": [2, 4], "proc_ta": [2, 4], "proc_tc": [2, 4], "proc_vb": [2, 4], "proc_vl": [2, 4], "symbol": 2, "betasymbol": [2, 4], "binaryoperatorsymbol": [2, 4], "deltasymbol": [2, 4], "envmarkersymbol": [2, 4], "gammasymbol": [2, 4], "lambdaclosuresymbol": [2, 4], "getenvmarkerindex": [2, 4], "lambdasymbol": [2, 4], "namesymbol": [2, 4], "checknamesymboltyp": [2, 4], "operatorsymbol": [2, 4], "istyp": [2, 4], "symbolfactori": [2, 4], "createsymbol": [2, 4], "tausymbol": [2, 4], "tuplesymbol": [2, 4], "unaryoperatorsymbol": [2, 4], "buildtreeexcept": [2, 4], "builttreeexcept": [2, 4], "commatoken": [2, 4], "regex": [2, 4], "commenttoken": [2, 4], "identifiertoken": [2, 4], "integertoken": [2, 4], "invalidtokenexcept": [2, 4], "fromlin": [2, 4], "fromtoken": [2, 4], "keywordtoken": [2, 4], "valu": [2, 4], "lparentoken": [2, 4], "operatortoken": [2, 4], "rparentoken": [2, 4], "semicolontoken": [2, 4], "spacestoken": [2, 4], "stringtoken": [2, 4], "fromvalu": [2, 4], "gettyp": [2, 4], "getvalu": [2, 4], "instanc": [2, 4], "isvalu": [2, 4], "tokenregex": [2, 4], "closeparen": [2, 4], "comment": [2, 4], "identifi": [2, 4], "integ": [2, 4], "operator_symbol": [2, 4], "openparen": [2, 4], "oper": [2, 4], "semicolon": [2, 4], "space": [2, 4], "string": [2, 4], "tree": 2, "astnod": [2, 4], "binarytreenod": [2, 4], "copi": [2, 4], "deep_copi": [2, 4], "getleft": [2, 4], "getright": [2, 4], "is_nam": [2, 4], "setleft": [2, 4], "setright": [2, 4], "setvalu": [2, 4], "valuei": [2, 4], "stnode": [2, 4], "assign_nod": [2, 4], "createfcrsnod": [2, 4], "gamma_nod": [2, 4], "is_gamma": [2, 4], "is_lambda": [2, 4], "lambda_nod": [2, 4], "parsevalueintoken": [2, 4], "ystar_nod": [2, 4], "treeformatt": [2, 4], "line_str": [2, 4], "interpret": [2, 4], "test": 2, "test_cse_machin": 2, "testrpalstgener": [2, 5], "run_rpal": [2, 5], "test_lex": 2, "testlex": [2, 5], "test_integer_token": [2, 5], "test_lex_comma": [2, 5], "test_lex_com": [2, 5], "test_lex_comment_2": [2, 5], "test_lex_empti": [2, 5], "test_lex_invalid_token": [2, 5], "test_lex_one_token": [2, 5], "test_lex_paren": [2, 5], "test_lex_semicolon": [2, 5], "test_lex_simpl": [2, 5], "test_lex_spac": [2, 5], "test_lex_two_token": [2, 5], "test_lookahead_after_nexttoken": [2, 5], "test_lookahead_com": [2, 5], "test_lookahead_comment_2": [2, 5], "test_lookahead_default": [2, 5], "test_lookahead_empti": [2, 5], "test_lookahead_multiple_cal": [2, 5], "test_lookahead_simpl": [2, 5], "test_nexttoken": [2, 5], "test_operator_token": [2, 5], "test_string_token": [2, 5], "test_str": [2, 5], "test_pars": 2, "testpars": [2, 5], "test_ast_str": [2, 5], "test_rpal_pars": 2, "testrpalpars": [2, 5], "test_d": [2, 5], "test_": [2, 5], "test_e_1": [2, 5], "test_e_empti": [2, 5], "test_rn": [2, 5], "test_rn_empti": [2, 5], "test_tc": [2, 5], "test_vb": [2, 5], "test_vl": [2, 5], "test_st": 2, "get_rpal_st": [2, 5], "test_st_gener": [2, 5], "entri": 3, "point": [3, 4], "rpal": [3, 4, 5], "lexic": 3, "analyz": 3, "The": [3, 4], "function": [3, 4, 5], "name": [3, 4], "from": [3, 4], "command": 3, "line": [3, 4], "argument": 3, "none": [3, 4], "class": [4, 5], "base": [4, 5], "object": 4, "A": 4, "an": 4, "abstract": 4, "syntax": 4, "ast": [4, 5], "static": 4, "given": 4, "input": 4, "root": 4, "cse": 4, "machin": 4, "env_index": 4, "st": [4, 5], "deltaindex": 4, "struct": 4, "kei": 4, "envindex": 4, "parent": 4, "repres": 4, "structur": 4, "initi": 4, "i": 4, "primit": 4, "insert": 4, "variabl": 4, "look": 4, "up": 4, "check": 4, "current": 4, "envmark": 4, "respons": 4, "simul": 4, "execut": 4, "us": 4, "languag": 4, "It": 4, "manag": 4, "code": 4, "provid": 4, "method": 4, "express": 4, "rule": 4, "4": 4, "11": 4, "thi": 4, "n": 4, "ari": 4, "well": 4, "creat": 4, "new": 4, "make": 4, "also": 4, "data": 4, "env_vari": 4, "respect": 4, "env_valu": 4, "6": 4, "binari": 4, "comput": 4, "result": 4, "8": 4, "ar": 4, "defin": 4, "form": 4, "delta_then": 4, "delta_els": 4, "beta": 4, "b": 4, "env_mark": 4, "5": 4, "exit": 4, "_lambda": 4, "2": 4, "closur": 4, "1": 4, "_tau": 4, "9": 4, "7": 4, "unari": 4, "program": 4, "list": 4, "attribut": 4, "gener": [4, 5], "posit": 4, "int": 4, "line_no": 4, "number": 4, "char_po": 4, "charact": 4, "state": 4, "count": 4, "specifi": 4, "retriev": 4, "next": 4, "__nexttoken": 4, "intern": 4, "rais": 4, "If": 4, "invalid": 4, "without": 4, "consum": 4, "more": 4, "onli": 4, "ahead": 4, "queue": 4, "option": 4, "default": 4, "y": 4, "src": 4, "sourc": 4, "build": 4, "x": 4, "children": 4, "correspond": 4, "must": 4, "implement": 4, "subclass": 4, "notimplementederror": 4, "ignor": 4, "expect": [4, 5], "except": 4, "paramet": 4, "bool": 4, "dr": 4, "db": 4, "when": 4, "conditon": 4, "ha": 4, "which": 4, "relev": 4, "arrai": 4, "marker": 4, "addit": 4, "extend": 4, "iter": 4, "can": 4, "either": 4, "singl": 4, "numer": 4, "datatyp": 4, "differnt": 4, "type": 4, "includ": 4, "both": 4, "t": 4, "tuplelist": 4, "messag": 4, "error": 4, "throw": 4, "finish": 4, "col": 4, "classmethod": 4, "left": 4, "parenthesi": 4, "right": 4, "appear": 4, "column": 4, "re": 4, "compil": 4, "za": 4, "z0": 4, "_": 4, "z": 4, "9_": 4, "0": 4, "": 4, "sa": 4, "child": 4, "sibl": 4, "represent": 4, "store": 4, "each": 4, "contain": 4, "refer": 4, "deep": 4, "fcr": 4, "first": 4, "level": 4, "switch": 4, "print": 4, "methodnam": 5, "runtest": 5, "testcas": 5, "filenam": 5, "run": 5, "flag": 5, "against": 5, "output": 5}, "objects": {"": [[0, 0, 0, "-", "helpers"], [3, 0, 0, "-", "myrpal"], [4, 0, 0, "-", "rpal_interpreter"], [5, 0, 0, "-", "tests"]], "helpers": [[0, 1, 1, "", "init_args"], [0, 1, 1, "", "read_file"]], "myrpal": [[3, 1, 1, "", "main"]], "rpal_interpreter": [[4, 2, 1, "", "Interpreter"], [4, 0, 0, "-", "ast_standardizer"], [4, 0, 0, "-", "cse_components"], [4, 0, 0, "-", "cse_machine"], [4, 0, 0, "-", "lexer"], [4, 0, 0, "-", "nodes"], [4, 0, 0, "-", "parser"], [4, 0, 0, "-", "rpal_parser"], [4, 0, 0, "-", "symbol"], [4, 0, 0, "-", "tokens"], [4, 0, 0, "-", "trees"]], "rpal_interpreter.Interpreter": [[4, 3, 1, "", "interpret"]], "rpal_interpreter.ast_standardizer": [[4, 2, 1, "", "ASTStandardizer"]], "rpal_interpreter.ast_standardizer.ASTStandardizer": [[4, 4, 1, "", "NON_STANDARDIZE"], [4, 3, 1, "", "check_to_standardize"], [4, 3, 1, "", "standardize"]], "rpal_interpreter.cse_components": [[4, 2, 1, "", "Control"], [4, 2, 1, "", "ControlStruct"], [4, 2, 1, "", "ControlStructures"], [4, 2, 1, "", "Environment"], [4, 2, 1, "", "Stack"]], "rpal_interpreter.cse_components.Control": [[4, 3, 1, "", "insertControlStruct"], [4, 3, 1, "", "insertEnvMarker"], [4, 3, 1, "", "peekRightMost"], [4, 3, 1, "", "removeRightMost"]], "rpal_interpreter.cse_components.ControlStruct": [[4, 3, 1, "", "addSymbol"], [4, 3, 1, "", "getArray"], [4, 3, 1, "", "getIndex"]], "rpal_interpreter.cse_components.ControlStructures": [[4, 3, 1, "", "get"]], "rpal_interpreter.cse_components.Environment": [[4, 3, 1, "", "insertEnvData"], [4, 3, 1, "", "lookUpEnv"]], "rpal_interpreter.cse_components.Stack": [[4, 3, 1, "", "popStack"], [4, 3, 1, "", "pushStack"], [4, 3, 1, "", "removeEnvironment"]], "rpal_interpreter.cse_machine": [[4, 2, 1, "", "CSEMachine"]], "rpal_interpreter.cse_machine.CSEMachine": [[4, 3, 1, "", "applyLambda"], [4, 3, 1, "", "binop"], [4, 3, 1, "", "conditional"], [4, 3, 1, "", "evaluate"], [4, 3, 1, "", "exitEnv"], [4, 3, 1, "", "stackLambda"], [4, 3, 1, "", "stackaName"], [4, 3, 1, "", "tupleFormation"], [4, 3, 1, "", "unop"]], "rpal_interpreter.lexer": [[4, 2, 1, "", "Lexer"]], "rpal_interpreter.lexer.Lexer": [[4, 3, 1, "", "lookAhead"], [4, 3, 1, "", "nextToken"], [4, 3, 1, "", "reset"], [4, 3, 1, "", "tokenize"]], "rpal_interpreter.nodes": [[4, 2, 1, "", "Nodes"]], "rpal_interpreter.nodes.Nodes": [[4, 4, 1, "", "AND"], [4, 4, 1, "", "AND_OP"], [4, 4, 1, "", "ARROW"], [4, 4, 1, "", "ASSIGN"], [4, 4, 1, "", "AT"], [4, 4, 1, "", "AUG"], [4, 4, 1, "", "BOP"], [4, 4, 1, "", "COMMA"], [4, 4, 1, "", "DIVIDE"], [4, 4, 1, "", "DUMMY"], [4, 4, 1, "", "EQ"], [4, 4, 1, "", "FALSE"], [4, 4, 1, "", "FCN_FORM"], [4, 4, 1, "", "GAMMA"], [4, 4, 1, "", "GE"], [4, 4, 1, "", "GR"], [4, 4, 1, "", "LAMBDA"], [4, 4, 1, "", "LE"], [4, 4, 1, "", "LET"], [4, 4, 1, "", "LS"], [4, 4, 1, "", "MINUS"], [4, 4, 1, "", "MULTIPLY"], [4, 4, 1, "", "NE"], [4, 4, 1, "", "NEG"], [4, 4, 1, "", "NIL"], [4, 4, 1, "", "NOT"], [4, 4, 1, "", "OR"], [4, 4, 1, "", "PARENS"], [4, 4, 1, "", "PLUS"], [4, 4, 1, "", "POWER"], [4, 4, 1, "", "REC"], [4, 4, 1, "", "TAU"], [4, 4, 1, "", "TRUE"], [4, 4, 1, "", "UOP"], [4, 4, 1, "", "WHERE"], [4, 4, 1, "", "WITHIN"], [4, 4, 1, "", "YSTAR"]], "rpal_interpreter.parser": [[4, 2, 1, "", "Parser"], [4, 2, 1, "", "ParserStack"]], "rpal_interpreter.parser.Parser": [[4, 3, 1, "", "buildTree"], [4, 3, 1, "", "getAST"], [4, 3, 1, "", "lookahead"], [4, 3, 1, "", "nextToken"], [4, 3, 1, "", "parse"], [4, 3, 1, "", "read"]], "rpal_interpreter.parser.ParserStack": [[4, 3, 1, "", "pop"], [4, 3, 1, "", "push"], [4, 3, 1, "", "top"]], "rpal_interpreter.rpal_parser": [[4, 2, 1, "", "RPALParser"]], "rpal_interpreter.rpal_parser.RPALParser": [[4, 3, 1, "", "parse"], [4, 3, 1, "", "proc_A"], [4, 3, 1, "", "proc_Af"], [4, 3, 1, "", "proc_Ap"], [4, 3, 1, "", "proc_At"], [4, 3, 1, "", "proc_B"], [4, 3, 1, "", "proc_Bp"], [4, 3, 1, "", "proc_Bs"], [4, 3, 1, "", "proc_Bt"], [4, 3, 1, "", "proc_D"], [4, 3, 1, "", "proc_Da"], [4, 3, 1, "", "proc_Db"], [4, 3, 1, "", "proc_Dr"], [4, 3, 1, "", "proc_E"], [4, 3, 1, "", "proc_Ew"], [4, 3, 1, "", "proc_R"], [4, 3, 1, "", "proc_Rn"], [4, 3, 1, "", "proc_T"], [4, 3, 1, "", "proc_Ta"], [4, 3, 1, "", "proc_Tc"], [4, 3, 1, "", "proc_Vb"], [4, 3, 1, "", "proc_Vl"]], "rpal_interpreter.symbol": [[4, 2, 1, "", "BetaSymbol"], [4, 2, 1, "", "BinaryOperatorSymbol"], [4, 2, 1, "", "DeltaSymbol"], [4, 2, 1, "", "EnvMarkerSymbol"], [4, 2, 1, "", "GammaSymbol"], [4, 2, 1, "", "LambdaClosureSymbol"], [4, 2, 1, "", "LambdaSymbol"], [4, 2, 1, "", "NameSymbol"], [4, 2, 1, "", "OperatorSymbol"], [4, 2, 1, "", "Symbol"], [4, 2, 1, "", "SymbolFactory"], [4, 2, 1, "", "TauSymbol"], [4, 2, 1, "", "TupleSymbol"], [4, 2, 1, "", "UnaryOperatorSymbol"]], "rpal_interpreter.symbol.LambdaClosureSymbol": [[4, 3, 1, "", "getEnvMarkerIndex"]], "rpal_interpreter.symbol.NameSymbol": [[4, 3, 1, "", "checkNameSymbolType"]], "rpal_interpreter.symbol.Symbol": [[4, 3, 1, "", "isType"]], "rpal_interpreter.symbol.SymbolFactory": [[4, 3, 1, "", "createSymbol"]], "rpal_interpreter.tokens": [[4, 5, 1, "", "BuildTreeException"], [4, 5, 1, "", "BuiltTreeException"], [4, 2, 1, "", "CommaToken"], [4, 2, 1, "", "CommentToken"], [4, 2, 1, "", "IdentifierToken"], [4, 2, 1, "", "IntegerToken"], [4, 5, 1, "", "InvalidTokenException"], [4, 2, 1, "", "KeywordToken"], [4, 2, 1, "", "LParenToken"], [4, 2, 1, "", "OperatorToken"], [4, 2, 1, "", "RParenToken"], [4, 2, 1, "", "SemiColonToken"], [4, 2, 1, "", "SpacesToken"], [4, 2, 1, "", "StringToken"], [4, 2, 1, "", "Token"], [4, 2, 1, "", "TokenRegex"]], "rpal_interpreter.tokens.CommaToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.CommentToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.IdentifierToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.IntegerToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.InvalidTokenException": [[4, 3, 1, "", "fromLine"], [4, 3, 1, "", "fromToken"]], "rpal_interpreter.tokens.KeywordToken": [[4, 3, 1, "", "values"]], "rpal_interpreter.tokens.LParenToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.OperatorToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.RParenToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.SemiColonToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.SpacesToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.StringToken": [[4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.Token": [[4, 3, 1, "", "fromValue"], [4, 3, 1, "", "getType"], [4, 3, 1, "", "getValue"], [4, 3, 1, "", "instance"], [4, 3, 1, "", "isType"], [4, 3, 1, "", "isValue"], [4, 3, 1, "", "regex"]], "rpal_interpreter.tokens.TokenRegex": [[4, 4, 1, "", "CloseParen"], [4, 4, 1, "", "Comma"], [4, 4, 1, "", "Comment"], [4, 4, 1, "", "Identifier"], [4, 4, 1, "", "Integer"], [4, 4, 1, "", "OPERATOR_SYMBOL"], [4, 4, 1, "", "OpenParen"], [4, 4, 1, "", "Operator"], [4, 4, 1, "", "SemiColon"], [4, 4, 1, "", "Spaces"], [4, 4, 1, "", "String"]], "rpal_interpreter.trees": [[4, 2, 1, "", "ASTNode"], [4, 2, 1, "", "BinaryTreeNode"], [4, 2, 1, "", "STNode"], [4, 2, 1, "", "TreeFormatter"]], "rpal_interpreter.trees.BinaryTreeNode": [[4, 3, 1, "", "copy"], [4, 3, 1, "", "deep_copy"], [4, 3, 1, "", "getLeft"], [4, 3, 1, "", "getRight"], [4, 3, 1, "", "getValue"], [4, 3, 1, "", "is_name"], [4, 3, 1, "", "setLeft"], [4, 3, 1, "", "setRight"], [4, 3, 1, "", "setValue"], [4, 3, 1, "", "valueIs"]], "rpal_interpreter.trees.STNode": [[4, 3, 1, "", "assign_node"], [4, 3, 1, "", "createFCRSNode"], [4, 3, 1, "", "gamma_node"], [4, 3, 1, "", "is_gamma"], [4, 3, 1, "", "is_lambda"], [4, 3, 1, "", "lambda_node"], [4, 3, 1, "", "parseValueInToken"], [4, 3, 1, "", "ystar_node"]], "rpal_interpreter.trees.TreeFormatter": [[4, 3, 1, "", "line_str"]], "tests": [[5, 0, 0, "-", "test_cse_machine"], [5, 0, 0, "-", "test_lexer"], [5, 0, 0, "-", "test_parser"], [5, 0, 0, "-", "test_rpal_parser"], [5, 0, 0, "-", "test_st"]], "tests.test_cse_machine": [[5, 2, 1, "", "TestRPALSTGeneration"]], "tests.test_cse_machine.TestRPALSTGeneration": [[5, 3, 1, "", "run_rpal"], [5, 3, 1, "", "test_cse_machine"]], "tests.test_lexer": [[5, 2, 1, "", "TestLexer"]], "tests.test_lexer.TestLexer": [[5, 3, 1, "", "test_integer_token"], [5, 3, 1, "", "test_lex"], [5, 3, 1, "", "test_lex_comma"], [5, 3, 1, "", "test_lex_comment"], [5, 3, 1, "", "test_lex_comment_2"], [5, 3, 1, "", "test_lex_empty"], [5, 3, 1, "", "test_lex_invalid_token"], [5, 3, 1, "", "test_lex_one_token"], [5, 3, 1, "", "test_lex_paren"], [5, 3, 1, "", "test_lex_semicolon"], [5, 3, 1, "", "test_lex_simple"], [5, 3, 1, "", "test_lex_spaces"], [5, 3, 1, "", "test_lex_two_tokens"], [5, 3, 1, "", "test_lookAhead_after_nextToken"], [5, 3, 1, "", "test_lookAhead_comment"], [5, 3, 1, "", "test_lookAhead_comment_2"], [5, 3, 1, "", "test_lookAhead_default"], [5, 3, 1, "", "test_lookAhead_empty"], [5, 3, 1, "", "test_lookAhead_multiple_calls"], [5, 3, 1, "", "test_lookAhead_simple"], [5, 3, 1, "", "test_nextToken"], [5, 3, 1, "", "test_operator_token"], [5, 3, 1, "", "test_string_token"], [5, 3, 1, "", "test_strings"]], "tests.test_parser": [[5, 2, 1, "", "TestParser"]], "tests.test_parser.TestParser": [[5, 3, 1, "", "test_ast_str"]], "tests.test_rpal_parser": [[5, 2, 1, "", "TestRPALParser"]], "tests.test_rpal_parser.TestRPALParser": [[5, 3, 1, "", "test"], [5, 3, 1, "", "test_D"], [5, 3, 1, "", "test_E"], [5, 3, 1, "", "test_E_1"], [5, 3, 1, "", "test_E_empty"], [5, 3, 1, "", "test_Rn"], [5, 3, 1, "", "test_Rn_empty"], [5, 3, 1, "", "test_Tc"], [5, 3, 1, "", "test_Vb"], [5, 3, 1, "", "test_Vl"]], "tests.test_st": [[5, 2, 1, "", "TestRPALSTGeneration"]], "tests.test_st.TestRPALSTGeneration": [[5, 3, 1, "", "get_rpal_st"], [5, 3, 1, "", "test_st_generation"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"helper": 0, "modul": [0, 3, 4, 5], "welcom": 1, "rpal": 1, "interpret": 1, "": 1, "document": 1, "indic": 1, "tabl": 1, "src": 2, "myrpal": 3, "rpal_interpret": 4, "packag": [4, 5], "submodul": [4, 5], "ast_standard": 4, "cse_compon": 4, "cse_machin": 4, "lexer": 4, "node": 4, "parser": 4, "rpal_pars": 4, "symbol": 4, "token": 4, "tree": 4, "content": [4, 5], "test": 5, "test_cse_machin": 5, "test_lex": 5, "test_pars": 5, "test_rpal_pars": 5, "test_st": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"helpers module": [[0, "module-helpers"]], "Welcome to RPAL Interpreter\u2019s documentation!": [[1, "welcome-to-rpal-interpreter-s-documentation"]], "Indices and tables": [[1, "indices-and-tables"]], "src": [[2, "src"]], "myrpal module": [[3, "module-myrpal"]], "rpal_interpreter package": [[4, "rpal-interpreter-package"]], "Submodules": [[4, "submodules"], [5, "submodules"]], "rpal_interpreter.ast_standardizer module": [[4, "module-rpal_interpreter.ast_standardizer"]], "rpal_interpreter.cse_components module": [[4, "module-rpal_interpreter.cse_components"]], "rpal_interpreter.cse_machine module": [[4, "module-rpal_interpreter.cse_machine"]], "rpal_interpreter.lexer module": [[4, "module-rpal_interpreter.lexer"]], "rpal_interpreter.nodes module": [[4, "module-rpal_interpreter.nodes"]], "rpal_interpreter.parser module": [[4, "module-rpal_interpreter.parser"]], "rpal_interpreter.rpal_parser module": [[4, "module-rpal_interpreter.rpal_parser"]], "rpal_interpreter.symbol module": [[4, "module-rpal_interpreter.symbol"]], "rpal_interpreter.tokens module": [[4, "module-rpal_interpreter.tokens"]], "rpal_interpreter.trees module": [[4, "module-rpal_interpreter.trees"]], "Module contents": [[4, "module-rpal_interpreter"], [5, "module-tests"]], "tests package": [[5, "tests-package"]], "tests.test_cse_machine module": [[5, "module-tests.test_cse_machine"]], "tests.test_lexer module": [[5, "module-tests.test_lexer"]], "tests.test_parser module": [[5, "module-tests.test_parser"]], "tests.test_rpal_parser module": [[5, "module-tests.test_rpal_parser"]], "tests.test_st module": [[5, "module-tests.test_st"]]}, "indexentries": {"helpers": [[0, "module-helpers"]], "init_args() (in module helpers)": [[0, "helpers.init_args"]], "module": [[0, "module-helpers"], [3, "module-myrpal"], [4, "module-rpal_interpreter"], [4, "module-rpal_interpreter.ast_standardizer"], [4, "module-rpal_interpreter.cse_components"], [4, "module-rpal_interpreter.cse_machine"], [4, "module-rpal_interpreter.lexer"], [4, "module-rpal_interpreter.nodes"], [4, "module-rpal_interpreter.parser"], [4, "module-rpal_interpreter.rpal_parser"], [4, "module-rpal_interpreter.symbol"], [4, "module-rpal_interpreter.tokens"], [4, "module-rpal_interpreter.trees"], [5, "module-tests"], [5, "module-tests.test_cse_machine"], [5, "module-tests.test_lexer"], [5, "module-tests.test_parser"], [5, "module-tests.test_rpal_parser"], [5, "module-tests.test_st"]], "read_file() (in module helpers)": [[0, "helpers.read_file"]], "main() (in module myrpal)": [[3, "myrpal.main"]], "myrpal": [[3, "module-myrpal"]], "and (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.AND"]], "and_op (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.AND_OP"]], "arrow (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.ARROW"]], "assign (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.ASSIGN"]], "astnode (class in rpal_interpreter.trees)": [[4, "rpal_interpreter.trees.ASTNode"]], "aststandardizer (class in rpal_interpreter.ast_standardizer)": [[4, "rpal_interpreter.ast_standardizer.ASTStandardizer"]], "at (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.AT"]], "aug (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.AUG"]], "bop (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.BOP"]], "betasymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.BetaSymbol"]], "binaryoperatorsymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.BinaryOperatorSymbol"]], "binarytreenode (class in rpal_interpreter.trees)": [[4, "rpal_interpreter.trees.BinaryTreeNode"]], "buildtreeexception": [[4, "rpal_interpreter.tokens.BuildTreeException"]], "builttreeexception": [[4, "rpal_interpreter.tokens.BuiltTreeException"]], "comma (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.COMMA"]], "csemachine (class in rpal_interpreter.cse_machine)": [[4, "rpal_interpreter.cse_machine.CSEMachine"]], "closeparen (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.CloseParen"]], "comma (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Comma"]], "commatoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.CommaToken"]], "comment (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Comment"]], "commenttoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.CommentToken"]], "control (class in rpal_interpreter.cse_components)": [[4, "rpal_interpreter.cse_components.Control"]], "controlstruct (class in rpal_interpreter.cse_components)": [[4, "rpal_interpreter.cse_components.ControlStruct"]], "controlstructures (class in rpal_interpreter.cse_components)": [[4, "rpal_interpreter.cse_components.ControlStructures"]], "divide (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.DIVIDE"]], "dummy (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.DUMMY"]], "deltasymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.DeltaSymbol"]], "eq (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.EQ"]], "envmarkersymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.EnvMarkerSymbol"]], "environment (class in rpal_interpreter.cse_components)": [[4, "rpal_interpreter.cse_components.Environment"]], "false (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.FALSE"]], "fcn_form (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.FCN_FORM"]], "gamma (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.GAMMA"]], "ge (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.GE"]], "gr (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.GR"]], "gammasymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.GammaSymbol"]], "identifier (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Identifier"]], "identifiertoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.IdentifierToken"]], "integer (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Integer"]], "integertoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.IntegerToken"]], "interpreter (class in rpal_interpreter)": [[4, "rpal_interpreter.Interpreter"]], "invalidtokenexception": [[4, "rpal_interpreter.tokens.InvalidTokenException"]], "keywordtoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.KeywordToken"]], "lambda (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.LAMBDA"]], "le (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.LE"]], "let (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.LET"]], "lparentoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.LParenToken"]], "ls (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.LS"]], "lambdaclosuresymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.LambdaClosureSymbol"]], "lambdasymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.LambdaSymbol"]], "lexer (class in rpal_interpreter.lexer)": [[4, "rpal_interpreter.lexer.Lexer"]], "minus (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.MINUS"]], "multiply (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.MULTIPLY"]], "ne (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.NE"]], "neg (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.NEG"]], "nil (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.NIL"]], "non_standardize (rpal_interpreter.ast_standardizer.aststandardizer attribute)": [[4, "rpal_interpreter.ast_standardizer.ASTStandardizer.NON_STANDARDIZE"]], "not (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.NOT"]], "namesymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.NameSymbol"]], "nodes (class in rpal_interpreter.nodes)": [[4, "rpal_interpreter.nodes.Nodes"]], "operator_symbol (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.OPERATOR_SYMBOL"]], "or (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.OR"]], "openparen (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.OpenParen"]], "operator (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Operator"]], "operatorsymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.OperatorSymbol"]], "operatortoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.OperatorToken"]], "parens (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.PARENS"]], "plus (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.PLUS"]], "power (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.POWER"]], "parser (class in rpal_interpreter.parser)": [[4, "rpal_interpreter.parser.Parser"]], "parserstack (class in rpal_interpreter.parser)": [[4, "rpal_interpreter.parser.ParserStack"]], "rec (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.REC"]], "rpalparser (class in rpal_interpreter.rpal_parser)": [[4, "rpal_interpreter.rpal_parser.RPALParser"]], "rparentoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.RParenToken"]], "stnode (class in rpal_interpreter.trees)": [[4, "rpal_interpreter.trees.STNode"]], "semicolon (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.SemiColon"]], "semicolontoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.SemiColonToken"]], "spaces (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.Spaces"]], "spacestoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.SpacesToken"]], "stack (class in rpal_interpreter.cse_components)": [[4, "rpal_interpreter.cse_components.Stack"]], "string (rpal_interpreter.tokens.tokenregex attribute)": [[4, "rpal_interpreter.tokens.TokenRegex.String"]], "stringtoken (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.StringToken"]], "symbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.Symbol"]], "symbolfactory (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.SymbolFactory"]], "tau (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.TAU"]], "true (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.TRUE"]], "tausymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.TauSymbol"]], "token (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.Token"]], "tokenregex (class in rpal_interpreter.tokens)": [[4, "rpal_interpreter.tokens.TokenRegex"]], "treeformatter (class in rpal_interpreter.trees)": [[4, "rpal_interpreter.trees.TreeFormatter"]], "tuplesymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.TupleSymbol"]], "uop (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.UOP"]], "unaryoperatorsymbol (class in rpal_interpreter.symbol)": [[4, "rpal_interpreter.symbol.UnaryOperatorSymbol"]], "where (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.WHERE"]], "within (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.WITHIN"]], "ystar (rpal_interpreter.nodes.nodes attribute)": [[4, "rpal_interpreter.nodes.Nodes.YSTAR"]], "addsymbol() (rpal_interpreter.cse_components.controlstruct method)": [[4, "rpal_interpreter.cse_components.ControlStruct.addSymbol"]], "applylambda() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.applyLambda"]], "assign_node() (rpal_interpreter.trees.stnode static method)": [[4, "rpal_interpreter.trees.STNode.assign_node"]], "binop() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.binop"]], "buildtree() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.buildTree"]], "checknamesymboltype() (rpal_interpreter.symbol.namesymbol method)": [[4, "rpal_interpreter.symbol.NameSymbol.checkNameSymbolType"]], "check_to_standardize() (rpal_interpreter.ast_standardizer.aststandardizer static method)": [[4, "rpal_interpreter.ast_standardizer.ASTStandardizer.check_to_standardize"]], "conditional() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.conditional"]], "copy() (rpal_interpreter.trees.binarytreenode class method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.copy"]], "createfcrsnode() (rpal_interpreter.trees.stnode static method)": [[4, "rpal_interpreter.trees.STNode.createFCRSNode"]], "createsymbol() (rpal_interpreter.symbol.symbolfactory static method)": [[4, "rpal_interpreter.symbol.SymbolFactory.createSymbol"]], "deep_copy() (rpal_interpreter.trees.binarytreenode class method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.deep_copy"]], "evaluate() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.evaluate"]], "exitenv() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.exitEnv"]], "fromline() (rpal_interpreter.tokens.invalidtokenexception class method)": [[4, "rpal_interpreter.tokens.InvalidTokenException.fromLine"]], "fromtoken() (rpal_interpreter.tokens.invalidtokenexception class method)": [[4, "rpal_interpreter.tokens.InvalidTokenException.fromToken"]], "fromvalue() (rpal_interpreter.tokens.token class method)": [[4, "rpal_interpreter.tokens.Token.fromValue"]], "gamma_node() (rpal_interpreter.trees.stnode static method)": [[4, "rpal_interpreter.trees.STNode.gamma_node"]], "get() (rpal_interpreter.cse_components.controlstructures method)": [[4, "rpal_interpreter.cse_components.ControlStructures.get"]], "getast() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.getAST"]], "getarray() (rpal_interpreter.cse_components.controlstruct method)": [[4, "rpal_interpreter.cse_components.ControlStruct.getArray"]], "getenvmarkerindex() (rpal_interpreter.symbol.lambdaclosuresymbol method)": [[4, "rpal_interpreter.symbol.LambdaClosureSymbol.getEnvMarkerIndex"]], "getindex() (rpal_interpreter.cse_components.controlstruct method)": [[4, "rpal_interpreter.cse_components.ControlStruct.getIndex"]], "getleft() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.getLeft"]], "getright() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.getRight"]], "gettype() (rpal_interpreter.tokens.token method)": [[4, "rpal_interpreter.tokens.Token.getType"]], "getvalue() (rpal_interpreter.tokens.token method)": [[4, "rpal_interpreter.tokens.Token.getValue"]], "getvalue() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.getValue"]], "insertcontrolstruct() (rpal_interpreter.cse_components.control method)": [[4, "rpal_interpreter.cse_components.Control.insertControlStruct"]], "insertenvdata() (rpal_interpreter.cse_components.environment method)": [[4, "rpal_interpreter.cse_components.Environment.insertEnvData"]], "insertenvmarker() (rpal_interpreter.cse_components.control method)": [[4, "rpal_interpreter.cse_components.Control.insertEnvMarker"]], "instance() (rpal_interpreter.tokens.token class method)": [[4, "rpal_interpreter.tokens.Token.instance"]], "interpret() (rpal_interpreter.interpreter method)": [[4, "rpal_interpreter.Interpreter.interpret"]], "istype() (rpal_interpreter.symbol.symbol method)": [[4, "rpal_interpreter.symbol.Symbol.isType"]], "istype() (rpal_interpreter.tokens.token method)": [[4, "rpal_interpreter.tokens.Token.isType"]], "isvalue() (rpal_interpreter.tokens.token method)": [[4, "rpal_interpreter.tokens.Token.isValue"]], "is_gamma() (rpal_interpreter.trees.stnode method)": [[4, "rpal_interpreter.trees.STNode.is_gamma"]], "is_lambda() (rpal_interpreter.trees.stnode method)": [[4, "rpal_interpreter.trees.STNode.is_lambda"]], "is_name() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.is_name"]], "lambda_node() (rpal_interpreter.trees.stnode static method)": [[4, "rpal_interpreter.trees.STNode.lambda_node"]], "line_str() (rpal_interpreter.trees.treeformatter static method)": [[4, "rpal_interpreter.trees.TreeFormatter.line_str"]], "lookahead() (rpal_interpreter.lexer.lexer method)": [[4, "rpal_interpreter.lexer.Lexer.lookAhead"]], "lookupenv() (rpal_interpreter.cse_components.environment method)": [[4, "rpal_interpreter.cse_components.Environment.lookUpEnv"]], "lookahead() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.lookahead"]], "nexttoken() (rpal_interpreter.lexer.lexer method)": [[4, "rpal_interpreter.lexer.Lexer.nextToken"]], "nexttoken() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.nextToken"]], "parse() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.parse"]], "parse() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.parse"]], "parsevalueintoken() (rpal_interpreter.trees.stnode method)": [[4, "rpal_interpreter.trees.STNode.parseValueInToken"]], "peekrightmost() (rpal_interpreter.cse_components.control method)": [[4, "rpal_interpreter.cse_components.Control.peekRightMost"]], "pop() (rpal_interpreter.parser.parserstack method)": [[4, "rpal_interpreter.parser.ParserStack.pop"]], "popstack() (rpal_interpreter.cse_components.stack method)": [[4, "rpal_interpreter.cse_components.Stack.popStack"]], "proc_a() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_A"]], "proc_af() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Af"]], "proc_ap() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Ap"]], "proc_at() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_At"]], "proc_b() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_B"]], "proc_bp() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Bp"]], "proc_bs() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Bs"]], "proc_bt() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Bt"]], "proc_d() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_D"]], "proc_da() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Da"]], "proc_db() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Db"]], "proc_dr() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Dr"]], "proc_e() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_E"]], "proc_ew() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Ew"]], "proc_r() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_R"]], "proc_rn() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Rn"]], "proc_t() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_T"]], "proc_ta() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Ta"]], "proc_tc() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Tc"]], "proc_vb() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Vb"]], "proc_vl() (rpal_interpreter.rpal_parser.rpalparser method)": [[4, "rpal_interpreter.rpal_parser.RPALParser.proc_Vl"]], "push() (rpal_interpreter.parser.parserstack method)": [[4, "rpal_interpreter.parser.ParserStack.push"]], "pushstack() (rpal_interpreter.cse_components.stack method)": [[4, "rpal_interpreter.cse_components.Stack.pushStack"]], "read() (rpal_interpreter.parser.parser method)": [[4, "rpal_interpreter.parser.Parser.read"]], "regex() (rpal_interpreter.tokens.commatoken method)": [[4, "rpal_interpreter.tokens.CommaToken.regex"]], "regex() (rpal_interpreter.tokens.commenttoken method)": [[4, "rpal_interpreter.tokens.CommentToken.regex"]], "regex() (rpal_interpreter.tokens.identifiertoken method)": [[4, "rpal_interpreter.tokens.IdentifierToken.regex"]], "regex() (rpal_interpreter.tokens.integertoken method)": [[4, "rpal_interpreter.tokens.IntegerToken.regex"]], "regex() (rpal_interpreter.tokens.lparentoken method)": [[4, "rpal_interpreter.tokens.LParenToken.regex"]], "regex() (rpal_interpreter.tokens.operatortoken method)": [[4, "rpal_interpreter.tokens.OperatorToken.regex"]], "regex() (rpal_interpreter.tokens.rparentoken method)": [[4, "rpal_interpreter.tokens.RParenToken.regex"]], "regex() (rpal_interpreter.tokens.semicolontoken method)": [[4, "rpal_interpreter.tokens.SemiColonToken.regex"]], "regex() (rpal_interpreter.tokens.spacestoken method)": [[4, "rpal_interpreter.tokens.SpacesToken.regex"]], "regex() (rpal_interpreter.tokens.stringtoken method)": [[4, "rpal_interpreter.tokens.StringToken.regex"]], "regex() (rpal_interpreter.tokens.token method)": [[4, "rpal_interpreter.tokens.Token.regex"]], "removeenvironment() (rpal_interpreter.cse_components.stack method)": [[4, "rpal_interpreter.cse_components.Stack.removeEnvironment"]], "removerightmost() (rpal_interpreter.cse_components.control method)": [[4, "rpal_interpreter.cse_components.Control.removeRightMost"]], "reset() (rpal_interpreter.lexer.lexer method)": [[4, "rpal_interpreter.lexer.Lexer.reset"]], "rpal_interpreter": [[4, "module-rpal_interpreter"]], "rpal_interpreter.ast_standardizer": [[4, "module-rpal_interpreter.ast_standardizer"]], "rpal_interpreter.cse_components": [[4, "module-rpal_interpreter.cse_components"]], "rpal_interpreter.cse_machine": [[4, "module-rpal_interpreter.cse_machine"]], "rpal_interpreter.lexer": [[4, "module-rpal_interpreter.lexer"]], "rpal_interpreter.nodes": [[4, "module-rpal_interpreter.nodes"]], "rpal_interpreter.parser": [[4, "module-rpal_interpreter.parser"]], "rpal_interpreter.rpal_parser": [[4, "module-rpal_interpreter.rpal_parser"]], "rpal_interpreter.symbol": [[4, "module-rpal_interpreter.symbol"]], "rpal_interpreter.tokens": [[4, "module-rpal_interpreter.tokens"]], "rpal_interpreter.trees": [[4, "module-rpal_interpreter.trees"]], "setleft() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.setLeft"]], "setright() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.setRight"]], "setvalue() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.setValue"]], "stacklambda() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.stackLambda"]], "stackaname() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.stackaName"]], "standardize() (rpal_interpreter.ast_standardizer.aststandardizer method)": [[4, "rpal_interpreter.ast_standardizer.ASTStandardizer.standardize"]], "tokenize() (rpal_interpreter.lexer.lexer method)": [[4, "rpal_interpreter.lexer.Lexer.tokenize"]], "top() (rpal_interpreter.parser.parserstack method)": [[4, "rpal_interpreter.parser.ParserStack.top"]], "tupleformation() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.tupleFormation"]], "unop() (rpal_interpreter.cse_machine.csemachine method)": [[4, "rpal_interpreter.cse_machine.CSEMachine.unop"]], "valueis() (rpal_interpreter.trees.binarytreenode method)": [[4, "rpal_interpreter.trees.BinaryTreeNode.valueIs"]], "values() (rpal_interpreter.tokens.keywordtoken method)": [[4, "rpal_interpreter.tokens.KeywordToken.values"]], "ystar_node() (rpal_interpreter.trees.stnode static method)": [[4, "rpal_interpreter.trees.STNode.ystar_node"]], "testlexer (class in tests.test_lexer)": [[5, "tests.test_lexer.TestLexer"]], "testparser (class in tests.test_parser)": [[5, "tests.test_parser.TestParser"]], "testrpalparser (class in tests.test_rpal_parser)": [[5, "tests.test_rpal_parser.TestRPALParser"]], "testrpalstgeneration (class in tests.test_cse_machine)": [[5, "tests.test_cse_machine.TestRPALSTGeneration"]], "testrpalstgeneration (class in tests.test_st)": [[5, "tests.test_st.TestRPALSTGeneration"]], "get_rpal_st() (tests.test_st.testrpalstgeneration method)": [[5, "tests.test_st.TestRPALSTGeneration.get_rpal_st"]], "run_rpal() (tests.test_cse_machine.testrpalstgeneration method)": [[5, "tests.test_cse_machine.TestRPALSTGeneration.run_rpal"]], "test() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test"]], "test_d() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_D"]], "test_e() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_E"]], "test_e_1() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_E_1"]], "test_e_empty() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_E_empty"]], "test_rn() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_Rn"]], "test_rn_empty() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_Rn_empty"]], "test_tc() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_Tc"]], "test_vb() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_Vb"]], "test_vl() (tests.test_rpal_parser.testrpalparser method)": [[5, "tests.test_rpal_parser.TestRPALParser.test_Vl"]], "test_ast_str() (tests.test_parser.testparser method)": [[5, "tests.test_parser.TestParser.test_ast_str"]], "test_cse_machine() (tests.test_cse_machine.testrpalstgeneration method)": [[5, "tests.test_cse_machine.TestRPALSTGeneration.test_cse_machine"]], "test_integer_token() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_integer_token"]], "test_lex() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex"]], "test_lex_comma() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_comma"]], "test_lex_comment() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_comment"]], "test_lex_comment_2() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_comment_2"]], "test_lex_empty() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_empty"]], "test_lex_invalid_token() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_invalid_token"]], "test_lex_one_token() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_one_token"]], "test_lex_paren() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_paren"]], "test_lex_semicolon() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_semicolon"]], "test_lex_simple() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_simple"]], "test_lex_spaces() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_spaces"]], "test_lex_two_tokens() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lex_two_tokens"]], "test_lookahead_after_nexttoken() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_after_nextToken"]], "test_lookahead_comment() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_comment"]], "test_lookahead_comment_2() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_comment_2"]], "test_lookahead_default() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_default"]], "test_lookahead_empty() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_empty"]], "test_lookahead_multiple_calls() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_multiple_calls"]], "test_lookahead_simple() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_lookAhead_simple"]], "test_nexttoken() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_nextToken"]], "test_operator_token() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_operator_token"]], "test_st_generation() (tests.test_st.testrpalstgeneration method)": [[5, "tests.test_st.TestRPALSTGeneration.test_st_generation"]], "test_string_token() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_string_token"]], "test_strings() (tests.test_lexer.testlexer method)": [[5, "tests.test_lexer.TestLexer.test_strings"]], "tests": [[5, "module-tests"]], "tests.test_cse_machine": [[5, "module-tests.test_cse_machine"]], "tests.test_lexer": [[5, "module-tests.test_lexer"]], "tests.test_parser": [[5, "module-tests.test_parser"]], "tests.test_rpal_parser": [[5, "module-tests.test_rpal_parser"]], "tests.test_st": [[5, "module-tests.test_st"]]}})